<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.topc.iems.mapper.RenterMapper">
  <resultMap id="BaseResultMap" type="co.topc.iems.entity.Renter">
    <id column="pk_id" jdbcType="VARCHAR" property="pkId" />
    <result column="renter_type" jdbcType="VARCHAR" property="renterType" />
    <result column="renter_name" jdbcType="VARCHAR" property="renterName" />
    <result column="renter_verify_id" jdbcType="VARCHAR" property="renterVerifyId" />
    <result column="renter_contactor" jdbcType="VARCHAR" property="renterContactor" />
    <result column="renter_contactor_telephone" jdbcType="VARCHAR" property="renterContactorTelephone" />
    <result column="renter_financial_contactor" jdbcType="VARCHAR" property="renterFinancialContactor" />
    <result column="renter_financial_contactor_telephone" jdbcType="VARCHAR" property="renterFinancialContactorTelephone" />
    <result column="renter_bill_email" jdbcType="VARCHAR" property="renterBillEmail" />
    <result column="renter_com_man" jdbcType="VARCHAR" property="renterComMan" />
    <result column="renter_com_man_telephone" jdbcType="VARCHAR" property="renterComManTelephone" />
    <result column="renter_com_built_time" jdbcType="TIMESTAMP" property="renterComBuiltTime" />
    <result column="renter_com_type" jdbcType="VARCHAR" property="renterComType" />
    <result column="renter_com_address" jdbcType="VARCHAR" property="renterComAddress" />
    <result column="renter_com_reg_amount" jdbcType="DOUBLE" property="renterComRegAmount" />
    <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="lessee_id" jdbcType="VARCHAR" property="lesseeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pk_id, renter_type, renter_name, renter_verify_id, renter_contactor, renter_contactor_telephone, 
    renter_financial_contactor, renter_financial_contactor_telephone, renter_bill_email, 
    renter_com_man, renter_com_man_telephone, renter_com_built_time, renter_com_type, 
    renter_com_address, renter_com_reg_amount, is_deleted, create_by, create_time, update_by, 
    update_time, lessee_id
  </sql>
  <select id="selectByExample" parameterType="co.topc.iems.entity.RenterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_iems_renter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_iems_renter
    where pk_id = #{pkId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_iems_renter
    where pk_id = #{pkId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="co.topc.iems.entity.RenterExample">
    delete from t_iems_renter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="co.topc.iems.entity.Renter">
    insert into t_iems_renter (pk_id, renter_type, renter_name, 
      renter_verify_id, renter_contactor, renter_contactor_telephone, 
      renter_financial_contactor, renter_financial_contactor_telephone, 
      renter_bill_email, renter_com_man, renter_com_man_telephone, 
      renter_com_built_time, renter_com_type, renter_com_address, 
      renter_com_reg_amount, is_deleted, create_by, 
      create_time, update_by, update_time, 
      lessee_id)
    values (#{pkId,jdbcType=VARCHAR}, #{renterType,jdbcType=VARCHAR}, #{renterName,jdbcType=VARCHAR}, 
      #{renterVerifyId,jdbcType=VARCHAR}, #{renterContactor,jdbcType=VARCHAR}, #{renterContactorTelephone,jdbcType=VARCHAR}, 
      #{renterFinancialContactor,jdbcType=VARCHAR}, #{renterFinancialContactorTelephone,jdbcType=VARCHAR}, 
      #{renterBillEmail,jdbcType=VARCHAR}, #{renterComMan,jdbcType=VARCHAR}, #{renterComManTelephone,jdbcType=VARCHAR}, 
      #{renterComBuiltTime,jdbcType=TIMESTAMP}, #{renterComType,jdbcType=VARCHAR}, #{renterComAddress,jdbcType=VARCHAR}, 
      #{renterComRegAmount,jdbcType=DOUBLE}, #{isDeleted,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{lesseeId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.topc.iems.entity.Renter">
    insert into t_iems_renter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        pk_id,
      </if>
      <if test="renterType != null">
        renter_type,
      </if>
      <if test="renterName != null">
        renter_name,
      </if>
      <if test="renterVerifyId != null">
        renter_verify_id,
      </if>
      <if test="renterContactor != null">
        renter_contactor,
      </if>
      <if test="renterContactorTelephone != null">
        renter_contactor_telephone,
      </if>
      <if test="renterFinancialContactor != null">
        renter_financial_contactor,
      </if>
      <if test="renterFinancialContactorTelephone != null">
        renter_financial_contactor_telephone,
      </if>
      <if test="renterBillEmail != null">
        renter_bill_email,
      </if>
      <if test="renterComMan != null">
        renter_com_man,
      </if>
      <if test="renterComManTelephone != null">
        renter_com_man_telephone,
      </if>
      <if test="renterComBuiltTime != null">
        renter_com_built_time,
      </if>
      <if test="renterComType != null">
        renter_com_type,
      </if>
      <if test="renterComAddress != null">
        renter_com_address,
      </if>
      <if test="renterComRegAmount != null">
        renter_com_reg_amount,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="lesseeId != null">
        lessee_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        #{pkId,jdbcType=VARCHAR},
      </if>
      <if test="renterType != null">
        #{renterType,jdbcType=VARCHAR},
      </if>
      <if test="renterName != null">
        #{renterName,jdbcType=VARCHAR},
      </if>
      <if test="renterVerifyId != null">
        #{renterVerifyId,jdbcType=VARCHAR},
      </if>
      <if test="renterContactor != null">
        #{renterContactor,jdbcType=VARCHAR},
      </if>
      <if test="renterContactorTelephone != null">
        #{renterContactorTelephone,jdbcType=VARCHAR},
      </if>
      <if test="renterFinancialContactor != null">
        #{renterFinancialContactor,jdbcType=VARCHAR},
      </if>
      <if test="renterFinancialContactorTelephone != null">
        #{renterFinancialContactorTelephone,jdbcType=VARCHAR},
      </if>
      <if test="renterBillEmail != null">
        #{renterBillEmail,jdbcType=VARCHAR},
      </if>
      <if test="renterComMan != null">
        #{renterComMan,jdbcType=VARCHAR},
      </if>
      <if test="renterComManTelephone != null">
        #{renterComManTelephone,jdbcType=VARCHAR},
      </if>
      <if test="renterComBuiltTime != null">
        #{renterComBuiltTime,jdbcType=TIMESTAMP},
      </if>
      <if test="renterComType != null">
        #{renterComType,jdbcType=VARCHAR},
      </if>
      <if test="renterComAddress != null">
        #{renterComAddress,jdbcType=VARCHAR},
      </if>
      <if test="renterComRegAmount != null">
        #{renterComRegAmount,jdbcType=DOUBLE},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lesseeId != null">
        #{lesseeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="co.topc.iems.entity.RenterExample" resultType="java.lang.Long">
    select count(*) from t_iems_renter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_iems_renter
    <set>
      <if test="record.pkId != null">
        pk_id = #{record.pkId,jdbcType=VARCHAR},
      </if>
      <if test="record.renterType != null">
        renter_type = #{record.renterType,jdbcType=VARCHAR},
      </if>
      <if test="record.renterName != null">
        renter_name = #{record.renterName,jdbcType=VARCHAR},
      </if>
      <if test="record.renterVerifyId != null">
        renter_verify_id = #{record.renterVerifyId,jdbcType=VARCHAR},
      </if>
      <if test="record.renterContactor != null">
        renter_contactor = #{record.renterContactor,jdbcType=VARCHAR},
      </if>
      <if test="record.renterContactorTelephone != null">
        renter_contactor_telephone = #{record.renterContactorTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.renterFinancialContactor != null">
        renter_financial_contactor = #{record.renterFinancialContactor,jdbcType=VARCHAR},
      </if>
      <if test="record.renterFinancialContactorTelephone != null">
        renter_financial_contactor_telephone = #{record.renterFinancialContactorTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.renterBillEmail != null">
        renter_bill_email = #{record.renterBillEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.renterComMan != null">
        renter_com_man = #{record.renterComMan,jdbcType=VARCHAR},
      </if>
      <if test="record.renterComManTelephone != null">
        renter_com_man_telephone = #{record.renterComManTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.renterComBuiltTime != null">
        renter_com_built_time = #{record.renterComBuiltTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.renterComType != null">
        renter_com_type = #{record.renterComType,jdbcType=VARCHAR},
      </if>
      <if test="record.renterComAddress != null">
        renter_com_address = #{record.renterComAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.renterComRegAmount != null">
        renter_com_reg_amount = #{record.renterComRegAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lesseeId != null">
        lessee_id = #{record.lesseeId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_iems_renter
    set pk_id = #{record.pkId,jdbcType=VARCHAR},
      renter_type = #{record.renterType,jdbcType=VARCHAR},
      renter_name = #{record.renterName,jdbcType=VARCHAR},
      renter_verify_id = #{record.renterVerifyId,jdbcType=VARCHAR},
      renter_contactor = #{record.renterContactor,jdbcType=VARCHAR},
      renter_contactor_telephone = #{record.renterContactorTelephone,jdbcType=VARCHAR},
      renter_financial_contactor = #{record.renterFinancialContactor,jdbcType=VARCHAR},
      renter_financial_contactor_telephone = #{record.renterFinancialContactorTelephone,jdbcType=VARCHAR},
      renter_bill_email = #{record.renterBillEmail,jdbcType=VARCHAR},
      renter_com_man = #{record.renterComMan,jdbcType=VARCHAR},
      renter_com_man_telephone = #{record.renterComManTelephone,jdbcType=VARCHAR},
      renter_com_built_time = #{record.renterComBuiltTime,jdbcType=TIMESTAMP},
      renter_com_type = #{record.renterComType,jdbcType=VARCHAR},
      renter_com_address = #{record.renterComAddress,jdbcType=VARCHAR},
      renter_com_reg_amount = #{record.renterComRegAmount,jdbcType=DOUBLE},
      is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      lessee_id = #{record.lesseeId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="co.topc.iems.entity.Renter">
    update t_iems_renter
    <set>
      <if test="renterType != null">
        renter_type = #{renterType,jdbcType=VARCHAR},
      </if>
      <if test="renterName != null">
        renter_name = #{renterName,jdbcType=VARCHAR},
      </if>
      <if test="renterVerifyId != null">
        renter_verify_id = #{renterVerifyId,jdbcType=VARCHAR},
      </if>
      <if test="renterContactor != null">
        renter_contactor = #{renterContactor,jdbcType=VARCHAR},
      </if>
      <if test="renterContactorTelephone != null">
        renter_contactor_telephone = #{renterContactorTelephone,jdbcType=VARCHAR},
      </if>
      <if test="renterFinancialContactor != null">
        renter_financial_contactor = #{renterFinancialContactor,jdbcType=VARCHAR},
      </if>
      <if test="renterFinancialContactorTelephone != null">
        renter_financial_contactor_telephone = #{renterFinancialContactorTelephone,jdbcType=VARCHAR},
      </if>
      <if test="renterBillEmail != null">
        renter_bill_email = #{renterBillEmail,jdbcType=VARCHAR},
      </if>
      <if test="renterComMan != null">
        renter_com_man = #{renterComMan,jdbcType=VARCHAR},
      </if>
      <if test="renterComManTelephone != null">
        renter_com_man_telephone = #{renterComManTelephone,jdbcType=VARCHAR},
      </if>
      <if test="renterComBuiltTime != null">
        renter_com_built_time = #{renterComBuiltTime,jdbcType=TIMESTAMP},
      </if>
      <if test="renterComType != null">
        renter_com_type = #{renterComType,jdbcType=VARCHAR},
      </if>
      <if test="renterComAddress != null">
        renter_com_address = #{renterComAddress,jdbcType=VARCHAR},
      </if>
      <if test="renterComRegAmount != null">
        renter_com_reg_amount = #{renterComRegAmount,jdbcType=DOUBLE},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lesseeId != null">
        lessee_id = #{lesseeId,jdbcType=VARCHAR},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.topc.iems.entity.Renter">
    update t_iems_renter
    set renter_type = #{renterType,jdbcType=VARCHAR},
      renter_name = #{renterName,jdbcType=VARCHAR},
      renter_verify_id = #{renterVerifyId,jdbcType=VARCHAR},
      renter_contactor = #{renterContactor,jdbcType=VARCHAR},
      renter_contactor_telephone = #{renterContactorTelephone,jdbcType=VARCHAR},
      renter_financial_contactor = #{renterFinancialContactor,jdbcType=VARCHAR},
      renter_financial_contactor_telephone = #{renterFinancialContactorTelephone,jdbcType=VARCHAR},
      renter_bill_email = #{renterBillEmail,jdbcType=VARCHAR},
      renter_com_man = #{renterComMan,jdbcType=VARCHAR},
      renter_com_man_telephone = #{renterComManTelephone,jdbcType=VARCHAR},
      renter_com_built_time = #{renterComBuiltTime,jdbcType=TIMESTAMP},
      renter_com_type = #{renterComType,jdbcType=VARCHAR},
      renter_com_address = #{renterComAddress,jdbcType=VARCHAR},
      renter_com_reg_amount = #{renterComRegAmount,jdbcType=DOUBLE},
      is_deleted = #{isDeleted,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      lessee_id = #{lesseeId,jdbcType=VARCHAR}
    where pk_id = #{pkId,jdbcType=VARCHAR}
  </update>
</mapper>